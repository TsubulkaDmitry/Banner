<?php
define("EXTRACT_PATH_FILES", 'banners');
  /**
   * Implement hook_menu()
   */

  function banners_menu(){
    $item = array(); // регистрируем пустой массив

    $item['banners/%id_node'] = array(
      'title' => 'Banners',
      'page callback' => banners_callback(),
      'type' => MENU_NORMAL_ITEM,
      'access callback' => TRUE
    );

    return $item;
  }

  /**
   * Implement page callback
   */

  function banners_callback() {
    global $base_url;
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->propertyCondition('status', 1);
    $query->propertyCondition('type', 'banner');
    $result = $query->execute();
    $nodes = node_load_multiple(array_keys($result['node']));

    dpm($nodes);

    return $base_url;

  }

/**
 * Implement hook_node_view()
 *
 * @param $node
 */

function banners_node_view ($node){

  global $base_url;
  if ($node->type == 'banner'){
    $arch = archiver_get_archiver('sites/default/files/banners/'.$node->field_file['und'][0]['filename']); //- получает экземпляр соответствующего класса в зависимости от типа архива $file.
    $arch->extract(drupal_get_path('module','banners').'/'.$node->field_file['und'][0]['fid']);//- выкладывает архив в указанную $dir директорию.
    $html_url = str_replace('.zip','.html',$base_url.'/'.drupal_get_path('module','banners').'/'.$node->field_file['und'][0]['fid'].'/'.$node->field_file['und'][0]['filename']);

    $node->content['frame'] = array(
      '#type' => 'html_tag',
      '#tag' => 'iframe',
      '#attributes' => array(
        'width' => $node->field_width['und'][0]['value'],
        'height' => $node->field_height['und'][0]['value'],
        'frameborder' => 0,
        'scrolling' => 'no',
        'src' => $html_url,
      ),
      '#value' => $node->nid,
    );

    $banner_view = $node->content['frame'];
    $banner_view = drupal_render($banner_view);
    $node->content['code'] = array(
      '#type' => 'html_tag',
      '#tag' => 'pre',
      '#value' => htmlentities($banner_view),
    );
  }
}
